name: Main CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x, 14.x, 16.x]

    steps:
    - uses: actions/checkout@v2

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - name: Cache node modules
      id: cache-nodemodules
      uses: actions/cache@v2
      env:
        cache-name: cache-node-modules
      with:
        path: node_modules
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-

    - name: Cache next build
      uses: actions/cache@v2
      id: restore-build-cache
      env:
        cache-name: cache-next-build
      with:
        path: .next/cache
        key: ${{ runner.os }}-build-${{ env.cache-name }}

    - name: Install yarn
      run: npm install -g yarn

    - name: Install dependencies
      if: steps.cache-nodemodules.outputs.cache-hit != 'true'
      run: yarn install --frozen-lockfile

    - name: Format
      run: yarn format

    - name: Lint
      run: yarn lint

    - name: Build
      run: yarn build
      env:
        DATABASE_URL: ${{ secrets.DATABASE_URL }}
#   - run: yarn test