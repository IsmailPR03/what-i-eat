name: Main CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x, 16.x]

    steps:
    - uses: actions/checkout@v2

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - name: Cache next build
      uses: actions/cache@v2
      id: restore-build-cache
      env:
        cache-name: cache-next-build
      with:
        path: .next/cache
        key: ${{ runner.os }}-build-${{ env.cache-name }}

    - name: Set up pnpm
      uses: pnpm/action-setup@v2.2.2
      with:
        version: 7.1.7
        run_install: false

    - name: Get pnpm store directory
      id: pnpm-cache
      run: |
        echo "::set-output name=pnpm_cache_dir::$(pnpm store path)"

    - uses: actions/cache@v3
      name: Setup pnpm cache
      with:
        path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-

    - name: Install dependencies
      run: pnpm i --frozen-lockfile

    - name: Generate prisma schema
      run: pnpm exec prisma generate

    - name: Format
      run: pnpm format

    - name: Lint
      run: pnpm lint

    - name: Build
      run: pnpm build
      env:
        DATABASE_URL: ${{ secrets.DATABASE_URL }}
#   - run: yarn test
